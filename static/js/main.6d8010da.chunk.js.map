{"version":3,"sources":["components/burguer.jpeg","components/header.js","components/food.js","components/nav.js","components/breakfast.js","components/setmenu.js","components/client.js","components/kitchen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Component","Food","props","id","type","onClick","onBreakfast","onSetmenu","Nav","href","Breakfast","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","dataAcc","i","push","infoMenu","map","arr","price","Setmenu","Registerclient","onChange","onChangeTemp","value","onChangeDelete","placeholder","onClient","Kitchen","inputName","App","initialBreak","initialSetmenu","name","temp","changeStateFunction","bind","assertThisInitialized","changeStateSetmenuFunction","updateTemp","updateName","setState","objectSpread","e","target","header","nav","client","food","breakfast","setmenu","kitchen","saveTemp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d8010da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burguer.5c788043.jpeg\";","import React, {Component} from 'react';\nimport logo from './burguer.jpeg';\n\nclass Header extends Component{\n    render(){\n        return(\n            <div className=\"App-header\">\n            <img src={logo} className=\"image\" alt=\"logo\" />\n            </div>\n        )\n    }\n}\nexport default Header;","import React from 'react';\n\nfunction Food(props){\n        return(\n            <div className=\"food\">\n            <button id=\"btn-breakfast\"type=\"button\" className=\"btn-primary btn-lg Desayuno\" onClick={props.onBreakfast}>\n            Desayuno\n            </button>\n            <button id=\"btn-menu\"type=\"button\" className=\"btn-primary btn-lg Menu\" onClick={props.onSetmenu}>\n            Menu del DÃ­a\n            </button>\n            \n            </div>\n        )\n}\nexport default Food;","import React, {Component} from 'react';\n\nclass Nav extends Component{\n    render(){\n        return(\n            <nav className=\"navbar\">\n            <a className=\"link\" href='www.google.com'>\n            Clientes\n            </a>\n            </nav>\n        )\n    }\n}\nexport default Nav;","import React, { Component } from 'react';\nimport {data} from './data.json';\n\n\nclass Breakfast extends Component {\n  constructor(){\n    super();\n    this.state= {\n      data: data,\n    }\n}\n  render() {\n    const dataAcc = []\n    for(let i in this.state.data){\n      dataAcc.push(this.state.data[i])\n    }\n    const infoMenu = dataAcc[0].map((arr)=>{\n      return(\n          <div className=\"col-md-4\">\n            <div className=\"card-mt-4\">\n              <button id=\"btnbreak\" className=\"btn btn-secondary btn-lg\"> {arr.type} <br/>{arr.price} </button>\n            </div>\n          </div>\n      )\n    })\n    return (\n      <div className=\"Screen1\"> \n        <div className=\"button\" >\n          {infoMenu}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Breakfast;\n","import React, { Component } from 'react';\nimport {data} from './data.json';\n\nclass Setmenu extends Component {\n    constructor(){\n        super();\n        this.state= {\n            data: data\n        }\n    }\n    render() {\n    const dataAcc = []\n    for(let i in this.state.data){\n        dataAcc.push(this.state.data[i])\n    }\n    const infoMenu = dataAcc[1].map((arr)=>{\n        return(\n            <div className=\"col-md-4\">\n                <div className=\"card-mt-4\">\n                    <button id=\"btnmenuday\" className=\"btn btn-secondary btn-lg\"> {arr.type} <br/> {arr.price} </button>\n                </div>\n            </div>\n        )\n    })\n    return (\n        <div className=\"Screen2\"> \n            <div className=\"button\" >\n                {infoMenu}\n            </div>\n        </div>\n    );\n    } \n}\n\nexport default Setmenu;\n","import React from 'react';\n\nfunction Registerclient(props){\n        return(\n            <div>\n                <input type='text' onChange={props.onChangeTemp} value={props.onChangeDelete} placeholder=\"Ingrese cliente\"/>\n                <button id=\"btn-input\" onClick={props.onClient} type=\"button\" className=\"btn btn-outline-danger\">\n            Enviar\n            </button>\n            </div>\n        )\n    }\nexport default Registerclient;","import React from 'react';\n\nfunction Kitchen(props){\n    return(\n        <div className=\"Screen2\">\n            <h1 className=\"kitchen\">Cocina</h1>\n            {props.inputName}\n            <p>Pedidos</p>\n            <div> </div>\n        </div>\n    )\n}\nexport default Kitchen; \n","import React, { Component } from 'react';\nimport './App.css';\n//import logo from './logo.svg';\nimport Header from './components/header.js';\nimport Food from './components/food.js';\nimport Nav from './components/nav.js';\nimport  Breakfast from './components/breakfast.js'\nimport Setmenu from './components/setmenu.js'\nimport Registerclient from './components/client.js'\nimport Kitchen from './components/kitchen';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state= {\n      initialBreak:false,\n      initialSetmenu: false,\n      name: \"\",\n      temp: \"\",\n      //idorder:[]\n\n    }\n    this.changeStateFunction= this.changeStateFunction.bind(this);\n    this.changeStateSetmenuFunction= this.changeStateSetmenuFunction.bind(this);\n    this.updateTemp= this.updateTemp.bind(this);\n    this.updateName= this.updateName.bind(this);\n  }\nchangeStateFunction(){\n  this.setState({\n    ...this.state,\n    initialBreak: true,\n    initialSetmenu: false\n  })\n}\nchangeStateSetmenuFunction (){\n  this.setState({\n    ...this.state,\n    initialSetmenu: true,\n    initialBreak: false\n  })\n}\nupdateTemp(e){\n  this.setState({\n    ...this.state,\n    temp: e.target.value,\n  })\n}\n\nupdateName(){\n  this.setState({\n    ...this.state,\n    temp:\"\",\n    name: this.state.temp,\n    \n  });\n}\nsaveTemp(){\n  if(this.state.name){\n    return(\n      <p>Cliente: {this.state.name}</p>\n    )\n  }\n  else{\n    return null\n  }\n}\n  render(){\n    return (\n      <div className=\"App\">\n        <Header />\n        < Nav />\n        <div className=\"Screen1\">\n        <h1 className=\"waiter\">Garzon</h1>\n        <Registerclient onChangeTemp={this.updateTemp} onChangeDelete={this.state.temp} onClient={this.updateName}/>\n        <Food onBreakfast={this.changeStateFunction}\n        onSetmenu={this.changeStateSetmenuFunction}/>\n          { this.state.initialBreak && <Breakfast/>}\n          { this.state.initialSetmenu && <Setmenu/> }\n        </div>\n        <Kitchen inputName={this.saveTemp()}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}